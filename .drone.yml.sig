eyJhbGciOiJIUzI1NiJ9.d29ya3NwYWNlOgogIGJhc2U6IC9nbwoKcGlwZWxpbmU6CiAgdGVzdDoKICAgIGltYWdlOiBnb2xhbmc6MS43LjUKICAgIGVudmlyb25tZW50OgogICAgICAtIENHT19FTkFCTEVEPTAKICAgIGNvbW1hbmRzOgogICAgICAtIGdvIHZldAogICAgICAtIGdvIHRlc3QKICAgICAgLSBnbyBidWlsZCAtbGRmbGFncyAiLXMgLXcgLVggbWFpbi52ZXJzaW9uPSREUk9ORV9CVUlMRF9OVU1CRVIiCiAgICB3aGVuOgogICAgICBldmVudDogcHVzaAoKICBwdWJsaXNoOgogICAgIyBjb3ZlcmFnZToKICAgICMgICB3aGVuOgogICAgIyAgICAgYnJhbmNoOiBtYXN0ZXIKICAgIG1hc3RlcjoKICAgICAgaW1hZ2U6IHBsdWdpbnMvZG9ja2VyCiAgICAgIHVzZXJuYW1lOiAke0RPQ0tFUl9VU0VSfQogICAgICBwYXNzd29yZDogJHtET0NLRVJfUEFTU30KICAgICAgZW1haWw6ICR7RE9DS0VSX0VNQUlMfQogICAgICByZXBvOiBzdGF5ZmFyaS9kcm9uZS1nY3IKICAgICAgdGFnOiBsYXRlc3QKICAgICAgd2hlbjoKICAgICAgICBicmFuY2g6IG1hc3RlcgogICAgZGV2ZWxvcDoKICAgICAgaW1hZ2U6IHBsdWdpbnMvZG9ja2VyCiAgICAgIHVzZXJuYW1lOiAke0RPQ0tFUl9VU0VSfQogICAgICBwYXNzd29yZDogJHtET0NLRVJfUEFTU30KICAgICAgZW1haWw6ICR7RE9DS0VSX0VNQUlMfQogICAgICByZXBvOiBzdGF5ZmFyaS9kcm9uZS1nY3IKICAgICAgdGFnOiBkZXZlbG9wCiAgICAgIHdoZW46CiAgICAgICAgYnJhbmNoOiBkZXZlbG9wCgpwbHVnaW46CiAgbmFtZTogR29vZ2xlIENvbnRhaW5lciBSZWdpc3RyeQogIGRlc2M6IEJ1aWxkIGFuZCBwdWJsaXNoIGltYWdlcyB0byBHb29nbGUgQ29udGFpbmVyIFJlZ2lzdHJ5CiAgdHlwZTogcHVibGlzaAogIGltYWdlOiBzdGF5ZmFyaS9kcm9uZS1nY3IKICBsYWJlbHM6CiAgICAtIGRvY2tlcgogICAgLSBpbWFnZQogICAgLSBjb250YWluZXIKICAgIC0gZ29vZ2xlCg.vgkbAKgB3Sn2feW1wUVq4N1N8_7GzK2oVaI3O334nOQ